{"version":3,"sources":["components/Navbar.js","components/EmailList.js","components/EmailContent.js","components/ComposeForm.js","App.js","index.js"],"names":["Navbar","_this","this","react_default","a","createElement","id","className","onClick","props","switchMainContent","switchInbox","unreadCount","concat","Component","EmailList","_this$props","emails","select","list","map","email","index","key","selected","unread","width","height","alt","emailName","src","avatarSrc","emailSubject","emailDesc","length","EmailContent","currentEmail","trash","sent","findIndex","emailTime","delete","emailText","p","emailRecip","ComposeForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","name","value","setState","defineProperty","submitForm","state","window","confirm","substring","Moment","Date","format","handleSubmit","initialState","idStart","_this2","_this$state","htmlFor","onChange","type","required","cols","rows","App","mainContent","inbox","newEmails","box","content","console","log","push","filter","i","toConsumableArray","fetch","then","result","json","newID","count","setInterval","emailList","components_EmailList","components_EmailContent","components_ComposeForm","components_Navbar","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.105d87f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"nav\" className=\"pure-u\">\r\n                <a className=\"nav-menu-button\">Menu</a>\r\n        \r\n                <div className=\"nav-inner\">\r\n                    <button className=\"primary-button pure-button\" onClick={() => this.props.switchMainContent('compose')}>Compose</button>\r\n        \r\n                    <div className=\"pure-menu\">\r\n                        <ul className=\"pure-menu-list\">\r\n                            <li className=\"pure-menu-item\"><a className=\"pure-menu-link\"  onClick={() => this.props.switchInbox('inbox')}>Inbox <span className=\"email-count\">{this.props.unreadCount ? `(${this.props.unreadCount})` : ''}</span></a></li>\r\n                            <li className=\"pure-menu-item\"><a  className=\"pure-menu-link\" onClick={() => this.props.switchInbox('sent')}>Sent</a></li>\r\n                            <li className=\"pure-menu-item\"><a  className=\"pure-menu-link\" onClick={() => this.props.switchInbox('trash')} >Trash</a></li>\r\n                            <li className=\"pure-menu-heading\">Labels</li>\r\n                            <li className=\"pure-menu-item\"><a className=\"pure-menu-link\"><span className=\"email-label-personal\"></span>Personal</a></li>\r\n                            <li className=\"pure-menu-item\"><a className=\"pure-menu-link\"><span className=\"email-label-work\"></span>Work</a></li>\r\n                            <li className=\"pure-menu-item\"><a className=\"pure-menu-link\"><span className=\"email-label-travel\"></span>Travel</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass EmailList extends Component {\r\n    render() {\r\n        const { emails, select } = this.props;\r\n        // Generate Emails list\r\n        const list = emails.map((email, index) => {\r\n            return (\r\n                <div \r\n                    key={index} \r\n                    className={\"email-item pure-g \" + (email.selected ? 'email-item-selected ' : '') + (email.unread ? 'email-item-unread' : '')}\r\n                    onClick={() => select(email.id)}\r\n                >\r\n                    <div className=\"pure-u\">\r\n                        <img width=\"64\" height=\"64\" alt={email.emailName + \"'s Avatar\"}  className=\"email-avatar\" src={email.avatarSrc} />\r\n                    </div>\r\n\r\n                    <div className=\"pure-u-3-4\">\r\n                        <h5 className=\"email-name\">{email.emailName}</h5>\r\n                        <h4 className=\"email-subject\">{email.emailSubject}</h4>\r\n                        <p className=\"email-desc\">\r\n                            {email.emailDesc}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n        // Render list\r\n        if( emails.length < 1) {\r\n            return ( \r\n                <div id=\"list\" className=\"pure-u-1\">\r\n                    <p id=\"empty-text\">Hmmm, there's nothing here!</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div id=\"list\" className=\"pure-u-1\">\r\n                    {list}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmailList;","import React, { Component } from 'react';\r\n\r\nclass EmailContent extends Component {\r\n    render() {\r\n        const { currentEmail, trash, sent, emails } = this.props;\r\n        // Check if the currentEmail is from the inbox (will have delete button if true)\r\n        if((emails.findIndex(email => email.id === currentEmail.id)) !== -1) {\r\n            return (\r\n                <div className=\"email-content\">\r\n                    <div className=\"email-content-header pure-g\">\r\n                        <div className=\"pure-u-1-2\">\r\n                            <h1 className=\"email-content-title\">{currentEmail.emailSubject}</h1>\r\n                            <p className=\"email-content-subtitle\">\r\n                                From <a>{currentEmail.emailName}</a> at <span>{currentEmail.emailTime}</span>\r\n                            </p>\r\n                        </div>\r\n        \r\n                        <div className=\"email-content-controls pure-u-1-2\">\r\n                            <button className=\"secondary-button pure-button\">Reply</button>\r\n                            <button className=\"secondary-button pure-button\">Forward</button>\r\n                            <button className=\"secondary-button pure-button\" onClick={() => this.props.delete(currentEmail.id)} >Delete</button>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div className=\"email-content-body\">\r\n                        {currentEmail.emailText.map((p, index) => {\r\n                            return (\r\n                                <p key={index}>{p}</p>\r\n                            )\r\n                        })}\r\n                        <p>\r\n                            Regards,<br />\r\n                            {currentEmail.emailName}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        // Check if the currentEmail is in the Sent folder (Will have reworded header if true)\r\n        } else if(currentEmail.emailRecip) {\r\n            return (\r\n                <div className=\"email-content\">\r\n                    <div className=\"email-content-header pure-g\">\r\n                        <div className=\"pure-u-1-2\">\r\n                            <h1 className=\"email-content-title\">{currentEmail.emailSubject}</h1>\r\n                            <p className=\"email-content-subtitle\">\r\n                                Sent to <a>{currentEmail.emailRecip}</a> at <span>{currentEmail.emailTime}</span>\r\n                            </p>\r\n                        </div>\r\n        \r\n                        <div className=\"email-content-controls pure-u-1-2\">\r\n                            <button className=\"secondary-button pure-button\">Reply</button>\r\n                            <button className=\"secondary-button pure-button\">Forward</button>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div className=\"email-content-body\">\r\n                        {currentEmail.emailText.map((p, index) => {\r\n                            return (\r\n                                <p key={index}>{p}</p>\r\n                            )\r\n                        })}\r\n                        <p>\r\n                            Regards,<br />\r\n                            {currentEmail.emailName}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        // If currentEmail is in Trash, there's no delete button\r\n        } else {\r\n            return (\r\n                <div className=\"email-content\">\r\n                    <div className=\"email-content-header pure-g\">\r\n                        <div className=\"pure-u-1-2\">\r\n                            <h1 className=\"email-content-title\">{currentEmail.emailSubject}</h1>\r\n                            <p className=\"email-content-subtitle\">\r\n                                From <a>{currentEmail.emailName}</a> at <span>{currentEmail.emailTime}</span>\r\n                            </p>\r\n                        </div>\r\n        \r\n                        <div className=\"email-content-controls pure-u-1-2\">\r\n                            <button className=\"secondary-button pure-button\">Reply</button>\r\n                            <button className=\"secondary-button pure-button\">Forward</button>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div className=\"email-content-body\">\r\n                        {currentEmail.emailText.map((p, index) => {\r\n                            return (\r\n                                <p key={index}>{p}</p>\r\n                            )\r\n                        })}\r\n                        <p>\r\n                            Regards,<br />\r\n                            {currentEmail.emailName}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmailContent;","import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\n\r\nclass ComposeForm extends Component {\r\n    // State\r\n    constructor(props) {\r\n        super(props)\r\n        this.initialState = {\r\n            id: this.props.idStart,\r\n            unread: false,\r\n            selected: false,\r\n            avatarSrc: 'https://avatars0.githubusercontent.com/u/33965202?v=4',\r\n            emailName: 'VivtheFish',\r\n            emailRecip: '',\r\n            emailSubject: '',\r\n            emailDesc: '',\r\n            emailTime: '',\r\n            emailText: '',\r\n        }\r\n        this.state = this.initialState\r\n    }\r\n    // Methods\r\n    handleChange = e => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    submitForm = () => {\r\n        // Check that there is a recipient email specified\r\n        if(this.state.emailRecip === '') return;\r\n        // Check/assert if they want to sent with no subject\r\n        if(this.state.emailSubject === '') {\r\n            if(!(window.confirm(\"You didn't include a Subject. Do you want to send anyway?\"))) {\r\n                return;\r\n            } else {\r\n                this.setState({\r\n                    emailSubject: ((this.state.emailSubject === '') ? '(No Subject)' : this.state.emailSubject),\r\n                    emailDesc: (this.state.emailText).substring(0,50) + \"...\",\r\n                    emailTime: Moment(new Date()).format('h:mma, MMMM Do, YYYY'),\r\n                    emailText: [ this.state.emailText ]\r\n                }, \r\n                () => {\r\n                    this.props.handleSubmit(this.state)\r\n                    this.setState(this.initialState)\r\n                });\r\n            }\r\n        // Save the email to the sent box\r\n        } else {\r\n            this.setState({\r\n                emailSubject: ((this.state.emailSubject === '') ? '(No Subject)' : this.state.emailSubject),\r\n                emailDesc: (this.state.emailText).substring(0,50) + \"...\",\r\n                emailTime: Moment(new Date()).format('h:mma, MMMM Do, YYYY'),\r\n                emailText: [ this.state.emailText ]\r\n            }, \r\n            () => {\r\n                this.props.handleSubmit(this.state)\r\n                this.setState(this.initialState)\r\n            });\r\n        }\r\n    }\r\n\r\n    // Template\r\n    render() {\r\n        const { emailSubject, emailText, emailRecip}  = this.state\r\n        return (\r\n            <div id=\"compose-form\">\r\n                <form className=\"pure-form pure-form-stacked\">\r\n                    <fieldset>\r\n                        <legend><h2>Compose a New Email</h2></legend>\r\n\r\n                        <label htmlFor=\"emailRecip\">Recipient's Email(s):</label>\r\n                        <input name=\"emailRecip\" value={emailRecip} onChange={this.handleChange} type=\"email\" required />\r\n        \r\n                        <label htmlFor=\"emailSubject\">Subject:</label>\r\n                        <input name=\"emailSubject\" type=\"text\" value={emailSubject} onChange={this.handleChange} />\r\n        \r\n                        <label htmlFor=\"emailText\">Your Message:</label>\r\n                        <textarea name=\"emailText\" id=\"emailText\" cols=\"50\" rows=\"8\"  value={emailText} onChange={this.handleChange}></textarea>\r\n        \r\n                        <button type=\"submit\" className=\"pure-button pure-button-primary\" onClick={() => this.submitForm()} >Send</button>\r\n                        <button className=\"pure-button\" onClick={() => this.props.switchMainContent('viewEmail')}>Cancel</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComposeForm;","import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport Navbar from './components/Navbar';\r\nimport EmailList from './components/EmailList';\r\nimport EmailContent from './components/EmailContent';\r\nimport ComposeForm from './components/ComposeForm';\r\n\r\nclass App extends Component {\r\n    // Lifecycle\r\n    componentDidMount() {\r\n        const url = 'https://my.api.mockaroo.com/email-project.json?key=26e98c30'\r\n\r\n        fetch(url)\r\n            .then(result => result.json())\r\n            .then(result =>{\r\n                console.log(result)\r\n                let newID = 1000;\r\n                let newEmails = result.map(email => {\r\n                    email.id = newID;\r\n                    newID++;\r\n                    email.unread = true;\r\n                    email.selected = false;\r\n                    email.emailDesc = (email.emailText).substring(0,50) + \"...\";\r\n                    email.emailTime = Moment(new Date()).format('h:mma, MMMM Do, YYYY');\r\n                    email.emailText = [ email.emailText ];\r\n                    return email;\r\n                })\r\n                this.setState({\r\n                    newEmails: [...newEmails]\r\n                })\r\n            })\r\n        let count = 0;\r\n        setInterval(() => {\r\n            if(count < 10) {\r\n                this.state.newEmails[count].emailTime = Moment(new Date()).format('h:mma, MMMM Do, YYYY');\r\n                this.setState({\r\n                    emails: [this.state.newEmails[count], ...this.state.emails]\r\n                }, () => {\r\n                    count++;\r\n                })\r\n            }\r\n        }, 60000)\r\n    }\r\n    // State\r\n    state = {\r\n        idStart: 6,\r\n        mainContent: 'viewEmail',\r\n        inbox: \"inbox\",\r\n        newEmails: [],\r\n        currentEmail: {\r\n            \"id\": 1,  \r\n            \"unread\": false,\r\n            \"selected\": true,\r\n            \"avatarSrc\": \"https://purecss.io/img/common/andrew-avatar.png\", \r\n            \"emailName\": \"Joe Froo\", \r\n            \"emailSubject\": \"What time is it right now?\",\r\n            \"emailDesc\": \"Hey just wondering if you know what time it is right now? If not, that's okay.\",\r\n            \"emailTime\": \"3:56pm, April 3, 2019\",\r\n            \"emailText\": [\r\n                \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                \"Officia non aliqua reprehenderit duis excepteur eu nostrud nisi aute qui esse. Sit pariatur et nisi deserunt. Adipisicing ipsum incididunt et Lorem minim magna. Ipsum magna commodo dolore ad ipsum.\"\r\n            ] \r\n        },\r\n        trash: [],\r\n        sent: [],\r\n        emails: [\r\n            {\r\n                \"id\": 1,  \r\n                \"unread\": false,\r\n                \"selected\": true,\r\n                \"avatarSrc\": \"https://purecss.io/img/common/andrew-avatar.png\", \r\n                \"emailName\": \"Joe Froo\", \r\n                \"emailSubject\": \"What time is it right now?\",\r\n                \"emailDesc\": \"Hey just wondering if you know what time it is right now? If not, that's okay.\",\r\n                \"emailTime\": \"3:56pm, April 3, 2019\",\r\n                \"emailText\": [\r\n                    \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                    \"Officia non aliqua reprehenderit duis excepteur eu nostrud nisi aute qui esse. Sit pariatur et nisi deserunt. Adipisicing ipsum incididunt et Lorem minim magna. Ipsum magna commodo dolore ad ipsum.\"\r\n              ]\r\n            }, \r\n            {\r\n                \"id\": 2,\r\n              \"unread\": true,\r\n              \"selected\": false,\r\n              \"avatarSrc\": \"https://purecss.io/img/common/tilo-avatar.png\", \r\n              \"emailName\": \"Tilo Mitra\", \r\n              \"emailSubject\": \"Hello from Toronto\",\r\n              \"emailDesc\": \"Hey, I just wanted to check in with you from Toronto. I got here earlier today.\",\r\n              \"emailTime\": \"11:21am, April 3, 2019\",\r\n              \"emailText\": [\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                  \"Officia non aliqua reprehenderit duis excepteur eu nostrud nisi aute qui esse. Sit pariatur et nisi deserunt. Adipisicing ipsum incididunt et Lorem minim magna. Ipsum magna commodo dolore ad ipsum.\"\r\n              ]\r\n            },\r\n            {\r\n                \"id\": 3,\r\n              \"unread\": true,\r\n              \"selected\": false,\r\n              \"avatarSrc\": \"https://purecss.io/img/common/ericf-avatar.png\", \r\n              \"emailName\": \"Eric Ferraiuolo\", \r\n              \"emailSubject\": \"Re: Pull Requests\",\r\n              \"emailDesc\": \"Hey, I had some feedback for pull request #51. We should center the menu so it looks better on mobile.\",\r\n              \"emailTime\": \"1:06pm, April 2, 2019\",\r\n              \"emailText\": [\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n              ]\r\n            },\r\n            {\r\n                \"id\": 4,\r\n              \"unread\": true,\r\n              \"selected\": false,\r\n              \"avatarSrc\": \"https://purecss.io/img/common/yui-avatar.png\", \r\n              \"emailName\": \"Yui Library\", \r\n              \"emailSubject\": \"You have 5 bugs assigned to you\",\r\n              \"emailDesc\": \"Duis aute irure dolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla.\",\r\n              \"emailTime\": \"7:55am, April 2, 2019\",\r\n              \"emailText\": [\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n              ]\r\n            },\r\n            {\r\n                \"id\": 5,\r\n              \"unread\": true,\r\n              \"selected\": false,\r\n              \"avatarSrc\": \"https://purecss.io/img/common/reid-avatar.png\", \r\n              \"emailName\": \"Reid Burke\", \r\n              \"emailSubject\": \"Re: Design Language\",\r\n              \"emailDesc\": \"Excepteur sint occaecat cupidatat non proident, sunt in culpa.\",\r\n              \"emailTime\": \"4:57pm, April 1, 2019\",\r\n              \"emailText\": [\r\n                  \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n              ]\r\n            }\r\n        ]\r\n    }\r\n    // Methods\r\n    switchInbox = box => {\r\n        this.setState({\r\n            inbox: box\r\n        });\r\n    }\r\n    switchMainContent = content => {\r\n        this.setState({\r\n            mainContent: content\r\n        });\r\n    }\r\n    select = id => {\r\n        const { inbox, emails, trash, sent } = this.state\r\n        if(inbox === 'inbox') {\r\n            // remove class from all emails\r\n            emails.map(email => email.selected = false)\r\n            // get index of selected email\r\n            const index = this.state.emails.findIndex(email => email.id === id);\r\n            // add classes\r\n            this.state.emails[index].selected = true;\r\n            this.state.emails[index].unread = false;\r\n            // show email in viewer tab\r\n            this.setState({\r\n                currentEmail: emails[index]\r\n            })\r\n        } else if(inbox === 'trash') {\r\n            // remove class from all emails\r\n            trash.map(email => email.selected = false)\r\n            // get index of selected email\r\n            const index = this.state.trash.findIndex(email => email.id === id);\r\n            // add classes\r\n            this.state.trash[index].selected = true;\r\n            this.state.trash[index].unread = false;\r\n            // show email in viewer tab\r\n            this.setState({\r\n                currentEmail: trash[index]\r\n            })\r\n            console.log(this.state.currentEmail)\r\n        } else if(inbox === 'sent') {\r\n            // remove class from all emails\r\n            sent.map(email => email.selected = false);\r\n            // get index of selected email\r\n            const index = this.state.sent.findIndex(email => email.id === id);\r\n            // add classes\r\n            this.state.sent[index].selected = true;\r\n            this.state.sent[index].unread = false;\r\n            // show email in viewer tab\r\n            this.setState({\r\n                currentEmail: sent[index]\r\n            })\r\n        }\r\n    }\r\n    delete = id => {\r\n        const { emails } = this.state\r\n        // get index of deleted email\r\n        const index = emails.findIndex(email => email.id === id);\r\n        // remove its selected class\r\n        this.state.emails[index].selected = false;\r\n        // add it to the trash array\r\n        this.state.trash.push(this.state.emails[index]);\r\n        this.setState({\r\n            // remove it from the emails array\r\n            emails: emails.filter((email, i) => {\r\n                return id !== email.id\r\n            }),\r\n        }, () => {\r\n            // Then select the first email of the inbox\r\n            if(this.state.emails.length > 0) {\r\n                this.setState({\r\n                    currentEmail: this.state.emails[0]\r\n                })\r\n                this.state.emails[0].selected = true;\r\n                this.state.emails[0].unread = false;\r\n            }\r\n        })\r\n    }\r\n    unreadCount() {\r\n        let count = 0;\r\n        this.state.emails.map(email => {\r\n            return email.unread ? count++ : ''\r\n        });\r\n        return count;\r\n    }\r\n    handleSubmit = email => {\r\n        this.setState({ \r\n            idStart: (this.state.idStart + 1),\r\n            sent: [...this.state.sent, email],\r\n            mainContent: 'viewEmail' \r\n        })\r\n    }\r\n    // Template\r\n    render() {\r\n        let unreadCount = this.unreadCount();\r\n        // Conditional Rendering of Email List depending on \"box\"\r\n        let emailList;\r\n        if(this.state.inbox === 'inbox') {\r\n            emailList = <EmailList emails={this.state.emails} select={this.select} />\r\n        } else if(this.state.inbox === 'trash') {\r\n            emailList = <EmailList emails={this.state.trash} select={this.select} />\r\n        } else if(this.state.inbox === 'sent') {\r\n            emailList = <EmailList emails={this.state.sent} select={this.select} />\r\n        }\r\n        // Conditional Rendering of Main Content area\r\n        let mainContent;\r\n        if(this.state.mainContent === 'viewEmail') {\r\n            mainContent = <EmailContent currentEmail={this.state.currentEmail} delete={this.delete} trash={this.state.trash} sent={this.state.sent} emails={this.state.emails} />\r\n        } else {\r\n            mainContent = <ComposeForm idStart={this.state.idStart} handleSubmit={this.handleSubmit} switchMainContent={this.switchMainContent} />\r\n        }\r\n\r\n        return (\r\n            <div id=\"layout\" className=\"content pure-g\">\r\n                <Navbar unreadCount={unreadCount} switchInbox={this.switchInbox} switchMainContent={this.switchMainContent} />\r\n        \r\n            {emailList}\r\n        \r\n            <div id=\"main\" className=\"pure-u-1\">\r\n                {mainContent}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/pure-min.css';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}